{
  "content": {
    "title": "Auto Tagging of Taxonomy terms in Drupal7",
    "created": "27 Sep, 2015",
    "author": "Karthik Kumar D K",
    "views": "463",
    "summary": "This article help you to create the way to implement the autotagging of the taxonomy terms based on the other field of the node page. This can be implemented by using the hook_node_presave()",
    "content": "<p>This article help you to create the way to implement the autotagging of the taxonomy terms based on the other field of the node page. This can be implemented by using the <code>hook_node_presave()</code>.</p>\n                                <p>In our case lets consider the <code>field_tags</code> is the taxonomy field, and we are autotagging based on the content present in <code>title</code> and <code>body</code> fields.</p>\n                                <p>All these actions are implemented inside the <code>hook_node_presave()</code>.</p>\n                                <div>\n                                    <p><strong>1. First thing is getting the list of terms of the <code>field_tags</code> vocabulary, this is done in the below code.</strong></p>\n                                    <p><code>$field = field_info_field('field_tags');</code><br>\n                                        // read the field information.<br>\n                                        <code>$voc_name = $field[\"settings\"][\"allowed_values\"][0][\"vocabulary\"];</code><br>\n                                        // get the vocabulary name which is been configured for the tag field.<br>\n                                        <code>$voc = taxonomy_vocabulary_machine_name_load($voc_name);</code><br>\n                                        // load the vocabulary object.<br>\n                                        <code>$terms = taxonomy_term_load_multiple(array(), array('vid' =&gt; $voc-&gt;vid));</code><br>\n                                        // get all the terms in the vocabulary.<br>\n                                        <code>$termnames = array();<br>\n                                            foreach($terms as $termskey =&gt; $termsvalue) {<br>\n                                            &nbsp;&nbsp;&nbsp; $termnames[$termskey] = $termsvalue-&gt;name;<br>\n                                            }</code><br>\n                                        // iterating the terms objects and getting out the terms names out of it.</p>\n                                    <p>\n                                        <span style=\"font-size:20px;\"><strong>2. So now we have the <code>$termnames</code> which needs to be cross checked with the content in the <code>title</code> and <code>body</code> fields, this is done in the below code.</strong></span></p>\n                                </div>\n                                <p>// read the node title and body and stored in the $content.<br>\n                                    <code>$content = $node-&gt;title;</code><br>\n                                    <code>$content .= $node-&gt;body['und'][0]['value'];</code><br>\n                                    // Iterate all the terms and compare with the content words, if matched then store them in seperate array.<br>\n                                    <code>$node_tids = array();<br>\n                                        foreach($termnames as $termname) {<br>\n                                        &nbsp;&nbsp;&nbsp; if (strpos($content, $termname) !== false) {<br>\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $term = taxonomy_get_term_by_name($termname);<br>\n                                        &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;&nbsp; foreach($term as $termkey =&gt; $termvalue) {<br>\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; $node_tids[] = (array) $termvalue;<br>\n                                        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\n                                        &nbsp;&nbsp;&nbsp; }<br>\n                                        }</code></p>\n                                <p>\n                                    <span style=\"font-size:20px;\"><strong>3. After this, we will have the term ids <code>$node_tids</code> which needs to be saved as autagged terms, this is just assinging to node object <code>$node</code>.</strong></span></p>\n                                <p><code>$node-&gt;field_tags[\"und\"] = $node_tids;</code></p>\n                                <p><span style=\"font-size:20px;\"><strong>Note: </strong></span>In case of exisisting node in be updated, we should take care of the existing terms which are saved in the node, to do this we need to add some code which does it.</p>\n                                <p><code>$node_tids_all = array();</code><br>\n                                    // check if any existing terms are their in the field_tags<br>\n                                    <code>if(!empty($node-&gt;field_tags)) {</code><br>\n                                    &nbsp; &nbsp; &nbsp;&nbsp; // in case not empty, merge the terms with the existing terms.<br>\n                                    <code>&nbsp;&nbsp;&nbsp; $node_tids_all = array_merge_recursive($node-&gt;field_tags[\"und\"], $node_tids);<br>\n                                        }</code><br>\n                                    // In case any duplicates exist, get out the unique ones.<br>\n                                    <code>$node_tids_all = array_map(\"unserialize\", array_unique(array_map(\"serialize\", $node_tids_all)));</code><br>\n                                    // then assign the selected terms to the node object.<br>\n                                    <code>$node-&gt;field_tags[\"und\"] = $node_tids_all;</code></p>\n                                <p>So, thats it, return the <code>$node</code> object at the end of the <code>hook_node_presave()</code>. this autotags the term field with title and body field.</p>\n                                <p>Thank you :)</p>",
    "type": "Sci-Tech",
    "category": "Drupal",
    "banner394x449": "upload/banner394x449/public/multiTaxonomy.png",
    "banner600x500": "upload/banner600x500/public/multiTaxonomy.png",
    "banner788x443": "upload/banner788x443/public/multiTaxonomy.png",
    "banner800x460": "upload/banner800x460/public/multiTaxonomy.png",
    "file": "2015-09-27-auto-tagging-taxonomy-terms-drupal7.json"
  }
}